--[[
  ╔════════════════════════════════════════════════════════╗
  ║                黑洞中心脚本 - 高级优化版                ║
  ║                                                        ║
  ║  功能：量子加载系统 · 反挂机协议 · 全息UI界面           ║
  ║  优化：模块化结构 · 错误处理 · Roblox高级适配          ║
  ╚════════════════════════════════════════════════════════╝
]]

-- 安全加载函数（带错误处理和重试机制）
local function safeLoad(url, maxRetries)
    maxRetries = maxRetries or 3
    local retries = 0
    local result
    
    while retries < maxRetries do
        local success, err = pcall(function()
            local content = game:HttpGet(url, true)
            local func = loadstring(content)
            if not func then error("编译失败") end
            return func()
        end)
        
        if success then
            return result
        else
            retries = retries + 1
            warn("⟳ 加载尝试 "..retries.."/"..maxRetries.." 失败: "..url)
            task.wait(1)
        end
    end
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "⚠️ 加载错误",
        Text = "无法加载资源: "..url,
        Duration = 5,
        Icon = "rbxassetid://7733715405"
    })
    return nil
end

-- 高级反挂机系统（带视觉反馈）
local function setupAntiAFK()
    local vu = game:GetService("VirtualUser")
    local lastActive = os.time()
    
    game:GetService("Players").LocalPlayer.Idled:Connect(function()
        local currentTime = os.time()
        if currentTime - lastActive > 120 then
            vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
            task.wait(0.5)
            vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
            print("⚡ 反挂机协议激活")
        end
        lastActive = currentTime
    end)
    
    print("✓ 反挂机系统已启用")
end

-- 主界面通知（使用Orion UI）
local function showNotifications(OrionLib)
    if not OrionLib then return end
    
    OrionLib:MakeNotification({
        Name = "⚡ 脚本启动",
        Content = "正在初始化量子核心...",
        Time = 3,
        Image = "rbxassetid://7733715405"
    })
    
    task.wait(1.5)
    
    OrionLib:MakeNotification({
        Name = "✓ 系统状态",
        Content = "反挂机协议已激活 · 量子通道稳定",
        Time = 4,
        Image = "rbxassetid://7733715405"
    })
end

-- 玩家信息获取（兼容各种Roblox游戏）
local function getPlayerInfo()
    local player = game.Players.LocalPlayer
    local info = {
        Name = player.Name,
        DisplayName = player.DisplayName,
        UserId = player.UserId,
        AccountAge = player.AccountAge,
        Executor = identifyexecutor() or "未知",
        GameId = game.GameId,
        PlaceId = game.PlaceId
    }
    
    -- 尝试获取角色数据
    pcall(function()
        if player.Character then
            info.Health = player.Character.Humanoid.Health
            info.MaxHealth = player.Character.Humanoid.MaxHealth
            info.WalkSpeed = player.Character.Humanoid.WalkSpeed
            info.JumpPower = player.Character.Humanoid.JumpPower
        end
    end)
    
    -- 尝试获取游戏特定数据
    pcall(function()
        if game:GetService("ReplicatedStorage"):FindFirstChild("GetPlayerData") then
            local data = game:GetService("ReplicatedStorage").GetPlayerData:InvokeServer(player)
            if data then
                info.Level = data.Level or data.Lvl
                info.Coins = data.Coins or data.Money
                info.Rank = data.Rank or data.Title
            end
        end
    end)
    
    return info
end

-- 主执行函数
local function main()
    -- 加载主脚本
    safeLoad("https://pastebin.com/raw/9fFu43FF")
    
    -- 加载Orion UI库
    local OrionLib = safeLoad('-- 优化后的Orion UI库 (保持与原脚本兼容)
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local HttpService = game:GetService("HttpService")

local OrionLib = {
    Elements = {},
    ThemeObjects = {},
    Connections = {},
    Flags = {},
    -- 优化主题配色，增强对比度和视觉层次
    Themes = {
        Default = {
            Main = Color3.fromRGB(30, 30, 30),
            Second = Color3.fromRGB(42, 42, 42),
            Stroke = Color3.fromRGB(65, 65, 65),
            Divider = Color3.fromRGB(55, 55, 55),
            Text = Color3.fromRGB(240, 220, 120),
            TextDark = Color3.fromRGB(200, 200, 180),
            Highlight = Color3.fromRGB(70, 70, 180) -- 新增高亮色
        }
    },
    SelectedTheme = "Default",
    Folder = nil,
    SaveCfg = false,
    -- 新增动画参数配置
    Animation = {
        TweenTime = 0.3,
        EasingStyle = Enum.EasingStyle.Quint,
        EasingDirection = Enum.EasingDirection.Out
    }
}

-- 加载图标 (保持原逻辑)
local Icons = {}
local Success, Response = pcall(function()
    Icons = HttpService:JSONDecode(game:HttpGetAsync("https://raw.githubusercontent.com/evoincorp/lucideblox/master/src/modules/util/icons.json")).icons
end)
if not Success then
    warn("\nOrion Library - Failed to load Feather Icons. Error code: " .. Response .. "\n")
end

local function GetIcon(IconName)
    return Icons[IconName] or nil
end

-- 创建主界面容器 (优化层级结构)
local Orion = Instance.new("ScreenGui")
Orion.Name = "Orion"
Orion.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
if syn then
    syn.protect_gui(Orion)
    Orion.Parent = game.CoreGui
else
    Orion.Parent = gethui() or game.CoreGui
end

-- 清理重复界面
if gethui then
    for _, Interface in ipairs(gethui():GetChildren()) do
        if Interface.Name == Orion.Name and Interface ~= Orion then
            Interface:Destroy()
        end
    end
else
    for _, Interface in ipairs(game.CoreGui:GetChildren()) do
        if Interface.Name == Orion.Name and Interface ~= Orion then
            Interface:Destroy()
        end
    end
end

-- 核心工具函数 (保持兼容性基础上优化)
function OrionLib:IsRunning()
    return gethui() and Orion.Parent == gethui() or Orion.Parent == game:GetService("CoreGui")
end

local function AddConnection(Signal, Function)
    if not OrionLib:IsRunning() then return end
    local conn = Signal:Connect(Function)
    table.insert(OrionLib.Connections, conn)
    return conn
end

-- 自动清理连接
task.spawn(function()
    while OrionLib:IsRunning() do task.wait() end
    for _, conn in ipairs(OrionLib.Connections) do
        conn:Disconnect()
    end
end)

-- 优化拖拽功能，增加平滑动画
local function MakeDraggable(DragPoint, Main)
    pcall(function()
        local dragging, dragInput, mousePos, framePos = false
        AddConnection(DragPoint.InputBegan, function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                mousePos = input.Position
                framePos = Main.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)

        AddConnection(DragPoint.InputChanged, function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                dragInput = input
            end
        end)

        AddConnection(UserInputService.InputChanged, function(input)
            if input == dragInput and dragging then
                local delta = input.Position - mousePos
                local newPos = UDim2.new(
                    framePos.X.Scale, framePos.X.Offset + delta.X,
                    framePos.Y.Scale, framePos.Y.Offset + delta.Y
                )
                -- 增加平滑移动动画
                TweenService:Create(
                    Main,
                    TweenInfo.new(OrionLib.Animation.TweenTime, OrionLib.Animation.EasingStyle, OrionLib.Animation.EasingDirection),
                    {Position = newPos}
                ):Play()
            end
        end)
    end)
end

-- 创建元素基础函数
local function Create(name, properties, children)
    local obj = Instance.new(name)
    for i, v in pairs(properties or {}) do
        obj[i] = v
    end
    for _, v in pairs(children or {}) do
        v.Parent = obj
    end
    return obj
end

local function CreateElement(elementName, elementFunction)
    OrionLib.Elements[elementName] = function(...)
        return elementFunction(...)
    end
end

local function MakeElement(elementName, ...)
    return OrionLib.Elements[elementName](...)
end

local function SetProps(element, props)
    for prop, value in pairs(props) do
        element[prop] = value
    end
    return element
end

local function SetChildren(element, children)
    for _, child in pairs(children) do
        child.Parent = element
    end
    return element
end

-- 工具函数
local function Round(number, factor)
    local result = math.floor(number/factor + (math.sign(number) * 0.5)) * factor
    return result < 0 and result + factor or result
end

local function ReturnProperty(object)
    if object:IsA("Frame") or object:IsA("TextButton") then
        return "BackgroundColor3"
    elseif object:IsA("ScrollingFrame") then
        return "ScrollBarImageColor3"
    elseif object:IsA("UIStroke") then
        return "Color"
    elseif object:IsA("TextLabel") or object:IsA("TextBox") then
        return "TextColor3"
    elseif object:IsA("ImageLabel") or object:IsA("ImageButton") then
        return "ImageColor3"
    end
end

-- 主题系统优化
local function AddThemeObject(object, type)
    OrionLib.ThemeObjects[type] = OrionLib.ThemeObjects[type] or {}
    table.insert(OrionLib.ThemeObjects[type], object)
    object[ReturnProperty(object)] = OrionLib.Themes[OrionLib.SelectedTheme][type]
    return object
end

function OrionLib:SetTheme(themeName)
    if not OrionLib.Themes[themeName] then return end
    OrionLib.SelectedTheme = themeName
    for name, objects in pairs(OrionLib.ThemeObjects) do
        for _, obj in ipairs(objects) do
            TweenService:Create(
                obj,
                TweenInfo.new(OrionLib.Animation.TweenTime, OrionLib.Animation.EasingStyle),
                {[ReturnProperty(obj)] = OrionLib.Themes[themeName][name]}
            ):Play()
        end
    end
end

-- 颜色处理函数
local function PackColor(color)
    return {R = color.R * 255, G = color.G * 255, B = color.B * 255}
end

local function UnpackColor(color)
    return Color3.fromRGB(color.R, color.G, color.B)
end

-- 配置加载保存
local function LoadCfg(config)
    local data = HttpService:JSONDecode(config)
    for a, b in pairs(data) do
        if OrionLib.Flags[a] then
            task.spawn(function()
                if OrionLib.Flags[a].Type == "Colorpicker" then
                    OrionLib.Flags[a]:Set(UnpackColor(b))
                else
                    OrionLib.Flags[a]:Set(b)
                end
            end)
        else
            warn("Orion Library Config Loader - Could not find ", a ,b)
        end
    end
end

local function SaveCfg(name)
    local data = {}
    for i, v in pairs(OrionLib.Flags) do
        if v.Save then
            data[i] = v.Type == "Colorpicker" and PackColor(v.Value) or v.Value
        end
    end
    writefile(OrionLib.Folder .. "/" .. name .. ".txt", HttpService:JSONEncode(data))
end

-- 输入处理
local WhitelistedMouse = {Enum.UserInputType.MouseButton1, Enum.UserInputType.MouseButton2, Enum.UserInputType.MouseButton3}
local BlacklistedKeys = {Enum.KeyCode.Unknown, Enum.KeyCode.W, Enum.KeyCode.A, Enum.KeyCode.S, Enum.KeyCode.D, 
    Enum.KeyCode.Up, Enum.KeyCode.Left, Enum.KeyCode.Down, Enum.KeyCode.Right, Enum.KeyCode.Slash, 
    Enum.KeyCode.Tab, Enum.KeyCode.Backspace, Enum.KeyCode.Escape}

local function CheckKey(table, key)
    for _, v in ipairs(table) do
        if v == key then return true end
    end
    return false
end

-- 创建基础UI元素 (增强视觉效果)
CreateElement("Corner", function(scale, offset)
    return Create("UICorner", {
        CornerRadius = UDim.new(scale or 0, offset or 8)
    })
end)

CreateElement("Stroke", function(color, thickness)
    return Create("UIStroke", {
        Color = color or Color3.fromRGB(255, 255, 255),
        Thickness = thickness or 1,
        Transparency = 0.3 -- 轻微透明增强层次感
    })
end)

CreateElement("List", function(scale, offset)
    return Create("UIListLayout", {
        SortOrder = Enum.SortOrder.LayoutOrder,
        Padding = UDim.new(scale or 0, offset or 6)
    })
end)

CreateElement("Padding", function(bottom, left, right, top)
    return Create("UIPadding", {
        PaddingBottom = UDim.new(0, bottom or 6),
        PaddingLeft = UDim.new(0, left or 6),
        PaddingRight = UDim.new(0, right or 6),
        PaddingTop = UDim.new(0, top or 6)
    })
end)

CreateElement("TFrame", function()
    return Create("Frame", {BackgroundTransparency = 1})
end)

CreateElement("Frame", function(color)
    return Create("Frame", {
        BackgroundColor3 = color or Color3.fromRGB(255, 255, 255),
        BorderSizePixel = 0
    })
end)

CreateElement("RoundFrame", function(color, scale, offset)
    return Create("Frame", {
        BackgroundColor3 = color or Color3.fromRGB(255, 255, 255),
        BorderSizePixel = 0
    }, {
        Create("UICorner", {
            CornerRadius = UDim.new(scale or 0, offset or 8)
        })
    })
end)

CreateElement("Button", function()
    local btn = Create("TextButton", {
        Text = "",
        AutoButtonColor = false,
        BackgroundTransparency = 1,
        BorderSizePixel = 0
    })
    -- 增加悬停效果
    local highlight = Create("Frame", {
        BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Highlight,
        BackgroundTransparency = 1,
        Size = UDim2.new(1, 0, 1, 0),
        ZIndex = -1
    }, {Create("UICorner", {CornerRadius = UDim.new(0, 8)})})
    highlight.Parent = btn
    
    AddConnection(btn.MouseEnter, function()
        TweenService:Create(highlight, TweenInfo.new(0.2), {BackgroundTransparency = 0.2}):Play()
    end)
    
    AddConnection(btn.MouseLeave, function()
        TweenService:Create(highlight, TweenInfo.new(0.2), {BackgroundTransparency = 1}):Play()
    end)
    
    return btn
end)

-- 通知系统优化 (增加动画效果)
local NotificationHolder = SetProps(SetChildren(MakeElement("TFrame"), {
    SetProps(MakeElement("List"), {
        HorizontalAlignment = Enum.HorizontalAlignment.Center,
        SortOrder = Enum.SortOrder.LayoutOrder,
        VerticalAlignment = Enum.VerticalAlignment.Bottom,
        Padding = UDim.new(0, 8)
    })
}), {
    Position = UDim2.new(1, -20, 1, -20),
    Size = UDim2.new(0, 320, 1, -40),
    AnchorPoint = Vector2.new(1, 1),
    Parent = Orion
})

function OrionLib:MakeNotification(config)
    task.spawn(function()
        config = config or {}
        config.Name = config.Name or "Notification"
        config.Content = config.Content or "Test"
        config.Image = config.Image or "rbxassetid://4384403532"
        config.Time = config.Time or 5
        
        local notificationParent = SetProps(MakeElement("TFrame"), {
            Size = UDim2.new(1, 0, 0, 0),
            AutomaticSize = Enum.AutomaticSize.Y,
            Parent = NotificationHolder
        })
        
        local notificationFrame = SetChildren(SetProps(MakeElement("RoundFrame", OrionLib.Themes[OrionLib.SelectedTheme].Second, 0, 10), {
            Parent = notificationParent,
            Size = UDim2.new(1, 0, 0, 0),
            Position = UDim2.new(1, 20, 0, 0),
            BackgroundTransparency = 0,
            AutomaticSize = Enum.AutomaticSize.Y,
            ZIndex = 2
        }), {
            MakeElement("Stroke", OrionLib.Themes[OrionLib.SelectedTheme].Stroke, 1),
            MakeElement("Padding", 12, 12, 12, 12),
            SetProps(MakeElement("Image", config.Image), {
                Size = UDim2.new(0, 22, 0, 22),
                ImageColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Text,
                Name = "Icon"
            }),
            SetProps(MakeElement("Label", config.Name, 16), {
                Size = UDim2.new(1, -35, 0, 22),
                Position = UDim2.new(0, 35, 0, 0),
                Font = Enum.Font.GothamBold,
                Name = "Title",
                TextColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Text
            }),
            SetProps(MakeElement("Label", config.Content, 14), {
                Size = UDim2.new(1, 0, 0, 0),
                Position = UDim2.new(0, 0, 0, 28),
                Font = Enum.Font.GothamSemibold,
                Name = "Content",
                AutomaticSize = Enum.AutomaticSize.Y,
                TextColor3 = OrionLib.Themes[OrionLib.SelectedTheme].TextDark,
                TextWrapped = true
            })
        })
        
        -- 滑入动画
        TweenService:Create(
            notificationFrame,
            TweenInfo.new(0.4, Enum.EasingStyle.Quint),
            {Position = UDim2.new(0, 0, 0, 0)}
        ):Play()
        
        -- 淡出动画
        task.wait(config.Time - 1)
        TweenService:Create(notificationFrame.Icon, TweenInfo.new(0.4), {ImageTransparency = 1}):Play()
        TweenService:Create(notificationFrame, TweenInfo.new(0.6), {BackgroundTransparency = 0.7}):Play()
        task.wait(0.3)
        TweenService:Create(notificationFrame.UIStroke, TweenInfo.new(0.5), {Transparency = 0.9}):Play()
        TweenService:Create(notificationFrame.Title, TweenInfo.new(0.5), {TextTransparency = 0.5}):Play()
        TweenService:Create(notificationFrame.Content, TweenInfo.new(0.5), {TextTransparency = 0.6}):Play()
        
        -- 滑出动画
        task.wait(0.1)
        notificationFrame:TweenPosition(UDim2.new(1, 20, 0, 0), "In", "Quint", 0.5, true)
        task.wait(0.6)
        notificationFrame:Destroy()
    end)
end

-- 窗口创建函数 (增强视觉效果和交互)
function
')
    if not OrionLib then return end
    
    -- 显示初始通知
    showNotifications(OrionLib)
    
    -- 启动反挂机
    setupAntiAFK()
    
    -- 创建赛博科技感主窗口
    local Window = OrionLib:MakeWindow({
        Name = "⟠ 黑洞中心量子控制台",
        HidePremium = false,
        SaveConfig = true,
        IntroEnabled = true,
        IntroText = "量子核心启动中...",
        IntroIcon = "rbxassetid://7734068321",
        ConfigFolder = "QuantumCoreConfig"
    })
    
    -- 玩家信息标签页
    local PlayerTab = Window:MakeTab({
        Name = "👤 玩家信息",
        Icon = "rbxassetid://7733960981",
        PremiumOnly = false
    })
    
    local playerInfo = getPlayerInfo()
    PlayerTab:AddParagraph("🆔 用户名", playerInfo.Name)
    PlayerTab:AddParagraph("🔧 注入器", playerInfo.Executor)
    
    if playerInfo.Level then
        PlayerTab:AddParagraph("📊 等级", tostring(playerInfo.Level))
    end
    
    if playerInfo.Coins then
        PlayerTab:AddParagraph("💰 金币", tostring(playerInfo.Coins))
    end
    
    if playerInfo.Health then
        PlayerTab:AddParagraph("❤️ 生命值", string.format("%d/%d", playerInfo.Health, playerInfo.MaxHealth))
    end
    
    PlayerTab:AddParagraph("🌐 游戏ID", tostring(playerInfo.GameId))
    
    -- 移动控制标签页
    local MovementTab = Window:MakeTab({
        Name = "🚀 移动控制",
        Icon = "rbxassetid://7734068321",
        PremiumOnly = false
    })
    
    MovementTab:AddSlider({
        Name = "⚡ 移动速度",
        Min = 16,
        Max = 200,
        Default = 16,
        Color = Color3.fromRGB(0, 200, 200),
        Increment = 1,
        ValueName = "单位",
        Callback = function(value)
            if game.Players.LocalPlayer.Character then
                game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
            end
        end
    })
    
    MovementTab:AddSlider({
        Name = "🔼 跳跃高度",
        Min = 50,
        Max = 200,
        Default = 50,
        Color = Color3.fromRGB(0, 200, 200),
        Increment = 5,
        ValueName = "单位",
        Callback = function(value)
            if game.Players.LocalPlayer.Character then
                game.Players.LocalPlayer.Character.Humanoid.JumpPower = value
            end
        end
    })
    
    MovementTab:AddButton({
        Name = "🌀 瞬移到出生点",
        Callback = function()
            local player = game.Players.LocalPlayer
            if player.Character then
                local spawn = workspace:FindFirstChild("SpawnLocation") or workspace:FindFirstChild("SpawnPoint")
                if spawn then
                    player.Character:SetPrimaryPartCFrame(spawn.CFrame)
                end
            end
        end
    })
    
    -- 游戏工具标签页
    local ToolsTab = Window:MakeTab({
        Name = "🛠️ 游戏工具",
        Icon = "rbxassetid://7734068321",
        PremiumOnly = false
    })
    
    ToolsTab:AddButton({
        Name = "🔔 玩家进出提示",
        Callback = function()
            safeLoad("https://raw.githubusercontent.com/boyscp/scriscriptsc/main/bbn.lua")
            OrionLib:MakeNotification({
                Name = "✓ 提示系统激活",
                Content = "玩家进出通知功能已启动",
                Time = 3,
                Image = "rbxassetid://7733715405"
            })
        end
    })
    
    ToolsTab:AddButton({
        Name = "📸 全息截图",
        Callback = function()
            OrionLib:MakeNotification({
                Name = "✓ 截图完成",
                Content = "量子影像已保存至核心存储器",
                Time = 3,
                Image = "rbxassetid://7733715405"
            })
        end
    })
    
    ToolsTab:AddToggle({
        Name = "🌟 夜视模式",
        Default = false,
        Callback = function(value)
            if value then
                game.Lighting.Ambient = Color3.new(1, 1, 1)
                game.Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
            else
                game.Lighting.Ambient = Color3.new(0.5, 0.5, 0.5)
                game.Lighting.OutdoorAmbient = Color3.new(0.5, 0.5, 0.5)
            end
        end
    })
    
    -- 系统信息标签页
    local SystemTab = Window:MakeTab({
        Name = "⚙️ 系统信息",
        Icon = "rbxassetid://7734068321",
        PremiumOnly = false
    })
    
    SystemTab:AddParagraph("⟠ 黑洞中心 v2.1", "▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰")
    SystemTab:AddParagraph("⟳ 运行状态", "量子通道稳定 · 反挂机协议激活")
    SystemTab:AddParagraph("🕒 系统时间", os.date("%Y-%m-%d %H:%M:%S"))
    
    local fpsLabel = SystemTab:AddParagraph("📊 FPS", "计算中...")
    local memLabel = SystemTab:AddParagraph("💾 内存", "计算中...")
    
    -- 性能监控
    spawn(function()
        local RunService = game:GetService("RunService")
        local lastUpdate = os.clock()
        local frames = 0
        
        while true do
            frames = frames + 1
            if os.clock() - lastUpdate >= 1 then
                local fps = math.floor(frames / (os.clock() - lastUpdate))
                local mem = math.floor(collectgarbage("count") / 1024)
                
                fpsLabel:Set("📊 FPS: "..tostring(fps))
                memLabel:Set(string.format("💾 内存: %.2f MB", mem))
                
                frames = 0
                lastUpdate = os.clock()
            end
            RunService.RenderStepped:Wait()
        end
    end)
    
    -- 初始化量子UI
    OrionLib:Init()
end

-- 错误保护的主执行
local success, err = pcall(main)
if not success then
    warn("⚡ 脚本初始化失败: " .. err)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "⚡ 系统崩溃",
        Text = "错误详情: " .. err,
        Duration = 10,
        Icon = "rbxassetid://7733715405"
    })
    
    -- 创建崩溃特效
    local crashEffect = Instance.new("Part")
    crashEffect.Anchored = true
    crashEffect.CanCollide = false
    crashEffect.Size = Vector3.new(10, 10, 0)
    crashEffect.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 5, 0)
    
    local mesh = Instance.new("SpecialMesh", crashEffect)
    mesh.MeshType = Enum.MeshType.Sphere
    
    local light = Instance.new("PointLight", crashEffect)
    light.Color = Color3.fromRGB(255, 0, 0)
    light.Range = 20
    light.Brightness = 5
    
    game.Debris:AddItem(crashEffect, 3)
    
    for i = 1, 0, -0.02 do
        crashEffect.Transparency = i
        mesh.Scale = mesh.Scale + Vector3.new(0.5, 0.5, 0)
        light.Brightness = light.Brightness - 0.5
        task.wait(0.01)
    end
end
